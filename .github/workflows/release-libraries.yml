---
name: Release Libraries

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., 0.1.0)'
        required: true
        type: string
      dry-run:
        description: 'Perform a dry run (no actual publishing)'
        required: false
        type: boolean
        default: true

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

permissions:
  contents: write

jobs:
  release:
    name: Release Libraries to crates.io
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: stable

      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@v2

      - name: Verify all crates have version ${{ inputs.version }}
        run: |
          for crate in ngdp-bpsv ribbit-client tact-client ngdp-cdn ngdp-cache ngdp-client; do
            VERSION=$(cargo metadata --format-version 1 --no-deps | jq -r ".packages[] | select(.name == \"$crate\") | .version")
            if [[ "$VERSION" != "${{ inputs.version }}" ]]; then
              echo "Error: $crate has version $VERSION, expected ${{ inputs.version }}"
              exit 1
            fi
            echo "âœ“ $crate version: $VERSION"
          done

      - name: Check for uncommitted changes
        run: |
          if [[ -n $(git status --porcelain) ]]; then
            echo "Error: There are uncommitted changes"
            git status
            exit 1
          fi

      - name: Run all tests
        run: cargo test --all-features --workspace

      - name: Build documentation
        run: cargo doc --all-features --no-deps

      - name: Dry run - check publishability
        if: inputs.dry-run
        run: |
          echo "=== DRY RUN MODE ==="
          echo "Would publish the following crates in order:"
          echo "1. ngdp-bpsv"
          echo "2. ribbit-client"
          echo "3. tact-client"
          echo "4. ngdp-cdn"
          echo "5. ngdp-cache"
          echo "6. ngdp-client"
          echo ""
          echo "Checking each crate can be packaged..."
          for crate in ngdp-bpsv ribbit-client tact-client ngdp-cdn ngdp-cache ngdp-client; do
            echo "Checking $crate..."
            cargo package -p $crate --list
          done

      - name: Publish to crates.io
        if: '!inputs.dry-run'
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CRATES_IO_TOKEN }}
        run: |
          echo "Publishing crates to crates.io..."
          
          # Publish in dependency order
          echo "Publishing ngdp-bpsv..."
          cargo publish -p ngdp-bpsv
          sleep 30  # Give crates.io time to index
          
          echo "Publishing ribbit-client and tact-client..."
          cargo publish -p ribbit-client
          cargo publish -p tact-client
          sleep 30
          
          echo "Publishing ngdp-cdn and ngdp-cache..."
          cargo publish -p ngdp-cdn
          cargo publish -p ngdp-cache
          sleep 30
          
          echo "Publishing ngdp-client..."
          cargo publish -p ngdp-client

      - name: Tag release
        if: '!inputs.dry-run'
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git tag -a "v${{ inputs.version }}" -m "Release v${{ inputs.version }}"
          git push origin "v${{ inputs.version }}"

      - name: Create GitHub release
        if: '!inputs.dry-run'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ inputs.version }}
          name: v${{ inputs.version }}
          body: |
            ## cascette-rs v${{ inputs.version }}

            This release includes all cascette-rs libraries:
            - `ngdp-bpsv` - BPSV parser/writer
            - `ribbit-client` - Ribbit protocol client
            - `tact-client` - TACT HTTP client
            - `ngdp-cdn` - CDN content delivery
            - `ngdp-cache` - Caching layer
            - `ngdp-client` - CLI tool

            See the [CHANGELOG](https://github.com/wowemulation-dev/cascette-rs/blob/main/CHANGELOG.md) for details.

            ### Installation

            ```toml
            [dependencies]
            ngdp-bpsv = "${{ inputs.version }}"
            ribbit-client = "${{ inputs.version }}"
            tact-client = "${{ inputs.version }}"
            ngdp-cdn = "${{ inputs.version }}"
            ngdp-cache = "${{ inputs.version }}"
            ```

            ### CLI Installation

            ```bash
            cargo install ngdp-client
            ```